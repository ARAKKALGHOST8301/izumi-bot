(function (_0x1e15d0, _0x35d852) {
    const _0xd0f68 = _0x1e15d0();
    function _0x4095f8(_0x4d7737, _0x3d978a, _0x50b8af, _0x2ee936, _0x2e313b) {
        return Akshay_Eypz_0x1f32(_0x4d7737 - -0x3a2, _0x2ee936);
    }
    function _0x5ed1f3(_0x5b29f1, _0x2d23c9, _0x3acec5, _0x4fe649, _0x797de0) {
        return Akshay_Eypz_0x1f32(_0x3acec5 - 0x167, _0x4fe649);
    }
    function _0x1523c7(_0x44d774, _0x535593, _0x250d12, _0x3697cc, _0x5b6993) {
        return Akshay_Eypz_0x1f32(_0x3697cc - -0x28f, _0x5b6993);
    }
    function _0x28de80(_0x361b6a, _0x4328aa, _0x1cc0f6, _0x2b41ba, _0x322506) {
        return Akshay_Eypz_0x1f32(_0x322506 - 0x45, _0x4328aa);
    }
    function _0x260434(_0xa3f1b5, _0x42416b, _0x11cfd0, _0x28445c, _0x5bf3ba) {
        return Akshay_Eypz_0x1f32(_0x5bf3ba - -0x31e, _0xa3f1b5);
    }
    while (!![]) {
        try {
            const _0x1f898d = parseInt(_0x260434(-0x16b, -0x165, -0x20b, -0x14b, -0x1ae)) / (0xa1 * -0x1f + 0x1bab + -0x11 * 0x7b) * (-parseInt(_0x260434(-0x11a, -0x1a2, -0x1c6, -0x139, -0x175)) / (-0x10eb * -0x1 + -0xb23 + 0x1 * -0x5c6)) + parseInt(_0x1523c7(-0x18e, -0x148, -0x149, -0x131, -0xc9)) / (-0x136a + 0x18c5 + -0x558) * (-parseInt(_0x260434(-0x172, -0xd6, -0x10e, -0x104, -0x133)) / (-0x1479 + 0xad5 + -0x67 * -0x18)) + parseInt(_0x4095f8(-0x197, -0x146, -0x10f, -0x13b, -0x1a9)) / (0x53 * -0x1 + -0x1 * -0x2513 + 0x24bb * -0x1) + parseInt(_0x1523c7(-0x134, -0x109, -0x17f, -0x113, -0x82)) / (-0x2b1 * 0x3 + -0x1af * 0x10 + 0x2309) * (-parseInt(_0x260434(-0x145, -0x1e4, -0x109, -0x1f8, -0x19e)) / (0x5f * 0x3d + 0x1298 + 0x6 * -0x6de)) + -parseInt(_0x1523c7(-0x7a, -0x13e, -0x14b, -0x10e, -0x107)) / (0xf2 * 0xc + 0x311 + 0x4cb * -0x3) * (-parseInt(_0x1523c7(-0x9e, 0x35, -0x37, -0x4e, -0xa2)) / (0x6 * -0x371 + -0x6b * -0x1 + 0x1444)) + parseInt(_0x260434(-0x71, -0x83, -0x188, -0x147, -0x10b)) / (-0x174b + 0x199a + 0x7 * -0x53) + parseInt(_0x5ed1f3(0x3b6, 0x2bd, 0x335, 0x332, 0x2ce)) / (-0xf43 * -0x1 + -0x1 * 0x86d + 0x2f * -0x25);
            if (_0x1f898d === _0x35d852)
                break;
            else
                _0xd0f68['push'](_0xd0f68['shift']());
        } catch (_0x217b29) {
            _0xd0f68['push'](_0xd0f68['shift']());
        }
    }
}(Akshay_Eypz_0x4745, -0x14b5c * 0x9 + 0xeaa7d + 0x9623b));
const Akshay_Eypz_0x30725a = (function () {
    let _0x306825 = !![];
    return function (_0x2e0afd, _0x4f58a5) {
        function _0x2d63c6(_0x2fd610, _0x253db0, _0x2a1cbc, _0x1fbc1f, _0x45a2da) {
            return Akshay_Eypz_0x1f32(_0x2a1cbc - -0x14b, _0x253db0);
        }
        function _0x2f1d7e(_0x6f87f0, _0x30b539, _0x2d265d, _0x1e9f92, _0x34c972) {
            return Akshay_Eypz_0x1f32(_0x6f87f0 - 0xa6, _0x2d265d);
        }
        function _0x23a952(_0x4f6ecf, _0x5c814a, _0x29faf1, _0x315c66, _0x3c3c94) {
            return Akshay_Eypz_0x1f32(_0x3c3c94 - 0x305, _0x4f6ecf);
        }
        function _0x5a45ac(_0x531b6c, _0x554d4f, _0x597110, _0x1c4880, _0x8bc5aa) {
            return Akshay_Eypz_0x1f32(_0x1c4880 - -0x25d, _0x531b6c);
        }
        function _0x368529(_0x33a2a5, _0x190d54, _0x166ab9, _0x29abf1, _0x45691f) {
            return Akshay_Eypz_0x1f32(_0x33a2a5 - -0xf4, _0x29abf1);
        }
        if (_0x2f1d7e(0x309, 0x330, 0x298, 0x361, 0x3a1) === _0x368529(0x16f, 0x1e9, 0x1bb, 0x104, 0x123)) {
            const _0x2ddb7e = _0x306825 ? function () {
                function _0x46260c(_0x218493, _0x150480, _0x1668b1, _0x3e3a5d, _0x2fb882) {
                    return _0x2f1d7e(_0x1668b1 - -0x3ba, _0x150480 - 0x40, _0x218493, _0x3e3a5d - 0x1cd, _0x2fb882 - 0x137);
                }
                function _0x229d0a(_0x39d58e, _0x5c5e32, _0x569dcb, _0x56fa9d, _0x59b4cb) {
                    return _0x368529(_0x56fa9d - 0x175, _0x5c5e32 - 0x189, _0x569dcb - 0x109, _0x569dcb, _0x59b4cb - 0x1f1);
                }
                function _0x27206f(_0x471d72, _0x53400f, _0xf52fd0, _0x584857, _0x5445f8) {
                    return _0x2f1d7e(_0x53400f - -0x3f0, _0x53400f - 0x6f, _0xf52fd0, _0x584857 - 0x1d6, _0x5445f8 - 0x15f);
                }
                function _0x123499(_0x3e6d11, _0x551b36, _0xf59034, _0x1645a0, _0x3515b4) {
                    return _0x368529(_0xf59034 - 0x36d, _0x551b36 - 0x1aa, _0xf59034 - 0x1ce, _0x3e6d11, _0x3515b4 - 0xb1);
                }
                function _0x5bb2a3(_0x592df1, _0x5e08c0, _0x117c1c, _0x1581fc, _0x553bbc) {
                    return _0x368529(_0x553bbc - 0x1ca, _0x5e08c0 - 0xd1, _0x117c1c - 0x145, _0x117c1c, _0x553bbc - 0x198);
                }
                if (_0x27206f(-0x1ec, -0x19e, -0x112, -0x123, -0x167) === _0x27206f(-0x1d7, -0x19e, -0x149, -0x1a8, -0x182)) {
                    if (_0x4f58a5) {
                        if (_0x27206f(-0x6e, -0xfc, -0x85, -0xc2, -0x11d) !== _0x27206f(-0x130, -0xfc, -0xbc, -0xe2, -0x160)) {
                            const _0x1fe5e1 = _0x434ce5[_0x123499(0x550, 0x453, 0x4d4, 0x4eb, 0x443)](_0x46fe38, arguments);
                            return _0x453c17 = null, _0x1fe5e1;
                        } else {
                            const _0x23130a = _0x4f58a5[_0x5bb2a3(0x2df, 0x373, 0x303, 0x2b3, 0x331)](_0x2e0afd, arguments);
                            return _0x4f58a5 = null, _0x23130a;
                        }
                    }
                } else
                    _0x4db9c5[_0x5bb2a3(0x21a, 0x292, 0x21b, 0x28c, 0x285)](_0x5bb2a3(0x2d6, 0x2d6, 0x397, 0x30e, 0x308) + _0x27206f(-0x1b2, -0x1a8, -0x1ba, -0x156, -0x155) + _0x46260c(-0xc6, -0x103, -0x149, -0x1d5, -0x182) + _0x229d0a(0x20d, 0x1ba, 0x220, 0x1f5, 0x175));
            } : function () {
            };
            return _0x306825 = ![], _0x2ddb7e;
        } else
            return function (_0x1b9fac) {
            }[_0x368529(0x87, 0x119, 0x11b, 0x8, 0x36) + _0x23a952(0x531, 0x4d8, 0x56e, 0x520, 0x55f) + 'r'](_0x2d63c6(0xc1, 0x7, 0x40, 0x43, 0xd7) + _0x2d63c6(-0x1c, -0x61, 0x1d, 0x13, -0x61) + _0x23a952(0x578, 0x584, 0x509, 0x582, 0x579))[_0x5a45ac(0x2, 0x8d, 0x44, -0x2, -0x2f)](_0x23a952(0x4db, 0x56d, 0x5c4, 0x50f, 0x56e) + 'er');
    };
}());
(function () {
    Akshay_Eypz_0x30725a(this, function () {
        function _0x23a4c0(_0x12b2a5, _0x56f541, _0x381f5c, _0x4130b9, _0x8c5ffc) {
            return Akshay_Eypz_0x1f32(_0x12b2a5 - 0xa0, _0x4130b9);
        }
        function _0x453e98(_0x26e231, _0x550b55, _0x260723, _0x2f75cd, _0x1ba7f9) {
            return Akshay_Eypz_0x1f32(_0x26e231 - 0x17f, _0x550b55);
        }
        function _0x56e9ee(_0x4270ff, _0x22ca74, _0x4336fa, _0x160b09, _0x2f9c9a) {
            return Akshay_Eypz_0x1f32(_0x160b09 - 0x2bf, _0x2f9c9a);
        }
        function _0x37bc27(_0x4db745, _0x190040, _0x42dccf, _0x3f2ade, _0x3abca3) {
            return Akshay_Eypz_0x1f32(_0x4db745 - 0x104, _0x3f2ade);
        }
        function _0x3bf30b(_0x353d03, _0x193cef, _0xa93fcb, _0x369ffb, _0x381e42) {
            return Akshay_Eypz_0x1f32(_0x353d03 - -0xdc, _0x369ffb);
        }
        if (_0x3bf30b(0xe7, 0x10a, 0x11d, 0x87, 0x161) === _0x23a4c0(0x202, 0x1a7, 0x267, 0x272, 0x22e))
            _0x5a8ac8(this, function () {
                function _0x59ac1a(_0x26d7a1, _0x4dcc82, _0x3b449f, _0x293edd, _0x70dc49) {
                    return _0x3bf30b(_0x293edd - -0x30a, _0x4dcc82 - 0x6, _0x3b449f - 0x43, _0x70dc49, _0x70dc49 - 0x7c);
                }
                function _0x10fe63(_0x5d68a8, _0x43b8ef, _0x469461, _0x4ba06d, _0x53aa49) {
                    return _0x23a4c0(_0x53aa49 - -0x47d, _0x43b8ef - 0x1de, _0x469461 - 0x83, _0x43b8ef, _0x53aa49 - 0x16b);
                }
                const _0x249f39 = new _0x453467(_0x429ee3(0x73, 0xe2, 0x7f, 0x12d, 0xc1) + _0x322d14(0x21e, 0x165, 0x1eb, 0x187, 0x127) + _0x322d14(0x1f9, 0x1f8, 0x13a, 0x1b5, 0x1ba) + ')'), _0x1a4546 = new _0x2a7af6(_0x10fe63(-0x247, -0x14c, -0x14c, -0x1da, -0x1dd) + _0x59ac1a(-0x321, -0x237, -0x285, -0x292, -0x278) + _0x59ac1a(-0x197, -0x292, -0x19c, -0x20d, -0x1f0) + _0x429ee3(0x15c, 0x101, 0x92, 0x57, 0xbf) + _0x247be6(0x476, 0x511, 0x449, 0x42c, 0x453) + _0x10fe63(-0x264, -0x281, -0x2d0, -0x324, -0x291) + _0x59ac1a(-0x237, -0x21c, -0x1e9, -0x219, -0x1d0), 'i');
                function _0x429ee3(_0xeb55ce, _0x53ba23, _0x105355, _0x9035d9, _0x3c40b0) {
                    return _0x23a4c0(_0x3c40b0 - -0x1fa, _0x53ba23 - 0x193, _0x105355 - 0x1c8, _0x105355, _0x3c40b0 - 0x70);
                }
                function _0x322d14(_0x3a08bb, _0xb1b56a, _0x29c5fc, _0x3dcc48, _0x28dc74) {
                    return _0x3bf30b(_0x3dcc48 - 0xa2, _0xb1b56a - 0x177, _0x29c5fc - 0x1b7, _0xb1b56a, _0x28dc74 - 0x1e2);
                }
                function _0x247be6(_0x55ad57, _0x3033b6, _0xca50cc, _0x22bee2, _0x5cc7ff) {
                    return _0x23a4c0(_0x55ad57 - 0x251, _0x3033b6 - 0xa3, _0xca50cc - 0x11, _0x5cc7ff, _0x5cc7ff - 0x177);
                }
                const _0x9e247c = _0xa6014a(_0x429ee3(0x170, 0x1a2, 0x9e, 0x9a, 0x10d));
                !_0x249f39[_0x429ee3(0x10e, 0x154, 0x4e, 0xdd, 0xd1)](_0x9e247c + _0x10fe63(-0x19a, -0x213, -0x172, -0x1c0, -0x1f0)) || !_0x1a4546[_0x10fe63(-0x224, -0x1ed, -0x1d9, -0x154, -0x1b2)](_0x9e247c + _0x429ee3(0x5c, 0x68, 0x27, 0x85, 0x42)) ? _0x9e247c('0') : _0x287fd3();
            })();
        else {
            const _0x151412 = new RegExp(_0x453e98(0x39a, 0x3f1, 0x342, 0x382, 0x417) + _0x3bf30b(0xe5, 0x11d, 0x9f, 0x124, 0x16c) + _0x3bf30b(0x113, 0x126, 0x11f, 0x182, 0x126) + ')'), _0xad6b3d = new RegExp(_0x3bf30b(0x124, 0x144, 0xe0, 0xd3, 0x104) + _0x3bf30b(0x78, 0x10f, 0x64, 0x50, 0xa6) + _0x23a4c0(0x279, 0x258, 0x20b, 0x223, 0x2c5) + _0x37bc27(0x31d, 0x2c0, 0x325, 0x2b7, 0x2e5) + _0x453e98(0x304, 0x2a9, 0x28b, 0x2ca, 0x33a) + _0x453e98(0x2cb, 0x350, 0x2b4, 0x33d, 0x2cd) + _0x23a4c0(0x26d, 0x292, 0x290, 0x1f0, 0x2f2), 'i'), _0x17cffd = Akshay_Eypz_0x2b4d8a(_0x37bc27(0x36b, 0x2f7, 0x2f9, 0x3ec, 0x348));
            if (!_0x151412[_0x453e98(0x3aa, 0x338, 0x35f, 0x3cb, 0x3b8)](_0x17cffd + _0x37bc27(0x2f1, 0x2d3, 0x2dd, 0x367, 0x365)) || !_0xad6b3d[_0x453e98(0x3aa, 0x3db, 0x316, 0x442, 0x30f)](_0x17cffd + _0x3bf30b(0xc0, 0x34, 0x14f, 0x13e, 0x7a))) {
                if (_0x3bf30b(0xa8, 0x132, 0x104, 0x9e, 0xe8) === _0x23a4c0(0x278, 0x2d8, 0x2fd, 0x1e6, 0x21c))
                    return new _0x24e823(function (_0x575e92, _0x274631) {
                        _0x266f4d(_0x5e4b30, (_0x49a83d, _0x22e86f, _0x790c15) => {
                            if (_0x49a83d) {
                                _0x274631(_0x49a83d);
                                return;
                            }
                            function _0x66cec2(_0x2527e0, _0x10625f, _0x15082b, _0x48698e, _0x16c5a6) {
                                return Akshay_Eypz_0x1f32(_0x15082b - -0x295, _0x16c5a6);
                            }
                            _0x575e92(_0x22e86f[_0x66cec2(-0x32, -0x96, -0x58, -0xd7, -0x7c)]());
                        });
                    });
                else
                    _0x17cffd('0');
            } else {
                if (_0x453e98(0x35a, 0x3b1, 0x3b6, 0x389, 0x336) !== _0x37bc27(0x2df, 0x243, 0x25c, 0x2a4, 0x29b)) {
                    _0x143453[_0x453e98(0x31d, 0x29f, 0x2b6, 0x2e9, 0x2ad)](_0x37bc27(0x2ae, 0x326, 0x331, 0x260, 0x2e0) + _0x23a4c0(0x2d3, 0x2e2, 0x2eb, 0x36e, 0x247) + _0x23a4c0(0x264, 0x2fc, 0x21a, 0x209, 0x2d4) + _0x3bf30b(0xa2, 0xf8, 0x13a, 0x136, 0x100) + _0x3bf30b(0x112, 0x136, 0x165, 0x118, 0xc8) + _0x56e9ee(0x4f8, 0x5b4, 0x517, 0x523, 0x594), _0x449909);
                    throw _0x4f3a5c;
                } else
                    Akshay_Eypz_0x2b4d8a();
            }
        }
    })();
}());
const {
        default: makeWASocket,
        useMultiFileAuthState,
        DisconnectReason,
        Browsers,
        fetchLatestBaileysVersion,
        delay,
        makeCacheableSignalKeyStore,
        makeInMemoryStore
    } = require(Akshay_Eypz_0x14b5d5(0x236, 0x25b, 0x1fa, 0x270, 0x1c1) + Akshay_Eypz_0x14b5d5(0x18b, 0x24b, 0x1c2, 0x220, 0x258) + Akshay_Eypz_0x14b5d5(0x269, 0x198, 0x1e8, 0x226, 0x1ce) + Akshay_Eypz_0x5909d1(-0x179, -0x1be, -0x1c6, -0x24a, -0x1d2)), fs = require('fs'), path = require(Akshay_Eypz_0x448121(0x89, 0x18, 0x70, -0x1, -0x55)), {exec} = require(Akshay_Eypz_0x448121(0xe0, 0x116, 0x83, 0x8f, 0x5b) + Akshay_Eypz_0x2ce520(0x1a0, 0xa5, 0x115, 0x13e, 0xad) + Akshay_Eypz_0x14b5d5(0x188, 0x152, 0x142, 0x11e, 0xf7));
function Akshay_Eypz_0x2ce520(_0x47a951, _0x2d71c1, _0x12474d, _0x5785ce, _0x19fa8f) {
    return Akshay_Eypz_0x1f32(_0x12474d - -0x13c, _0x2d71c1);
}
const util = require(Akshay_Eypz_0x5909d1(-0x13a, -0x85, -0xf5, -0xd8, -0x132));
function Akshay_Eypz_0x4745() {
    const _0x5c362a = [
        'ing',
        '../pa',
        'set',
        '\x20read',
        'pAWsR',
        '\x20Plug',
        'msg',
        'key',
        'hatsA',
        'dZYca',
        '32714',
        'ges',
        'user',
        'close',
        'ilabl',
        '\x0aErro',
        'ion\x20*',
        'les:',
        'PIRAP',
        'ectin',
        'r\x20:\x20',
        ']\x20:\x20',
        'IqvKG',
        'KJhgE',
        '\x0aVERS',
        'alize',
        'to\x20se',
        'readd',
        '$]*)',
        '4097346msZmDM',
        'path',
        '❳━─\x0a\x0a',
        'video',
        'UgGcO',
        'INS:\x20',
        'CTED*',
        'unava',
        'atsAp',
        '```─━',
        'ztISg',
        'a-zA-',
        '*BOT\x20',
        'DBfNb',
        'RvSQU',
        'roup',
        '__bas',
        'PRESE',
        's@bro',
        'YWmCm',
        'ceUpd',
        'ses',
        'SUDO',
        'typin',
        'ase\x20s',
        'fromM',
        'able',
        'qnauZ',
        'type',
        '4JWXfBn',
        'sendM',
        'chain',
        'Whats',
        '\x5c(\x20*\x5c',
        'NJEJc',
        '\x20to\x20W',
        'call',
        'split',
        'Datab',
        '...',
        'outpu',
        '\x0aJid\x20',
        './ind',
        'er.me',
        'group',
        't.io-',
        'ckage',
        'toStr',
        'macOS',
        'get',
        '\x5c+\x5c+\x20',
        'sendP',
        '\x20clos',
        'match',
        './dat',
        'ing\x20a',
        'sWith',
        'onlyG',
        'isGro',
        'Messa',
        'itial',
        '7599010IdkjJq',
        'eJid',
        'EdSqN',
        'i-md]',
        'ction',
        'ajshi',
        'ding',
        '\x20Aksh',
        '14365600HgrQsx',
        'open',
        'https',
        'pp...',
        'ASE',
        'ZGsWh',
        'Z_$][',
        'Recon',
        'funct',
        'SESSI',
        'remot',
        'versi',
        'promi',
        'CMD',
        'patte',
        'util',
        'tNZdJ',
        'store',
        'PORT\x20',
        'ed!',
        'notif',
        'dgsQl',
        'wkZhx',
        's.upd',
        'test',
        'keys',
        'Deskt',
        'rGAgU',
        'hLNbb',
        '.js',
        'READ_',
        'Conne',
        '\x20conn',
        '[MESS',
        'LOG_M',
        'ng/ba',
        'KHhzu',
        '.us',
        'gify',
        '❲\x20ERR',
        'erMes',
        'DATAB',
        'trim',
        'all',
        'jid',
        'CONNE',
        '209538irpFWb',
        'lpXHg',
        'WMKap',
        'debu',
        'initi',
        'filte',
        'map',
        '@adiw',
        'lling',
        'FIX:\x20',
        'getFu',
        'Insta',
        'ynchr',
        'fdoDQ',
        'rver.',
        'avail',
        '_proc',
        'ugins',
        'sion/',
        'pino',
        'Plugi',
        'ay-Ey',
        'onlyP',
        'ERROR',
        'image',
        'ructo',
        'apply',
        'start',
        'rxBGA',
        'sing',
        'child',
        'strin',
        'cache',
        '[izum',
        'deGng',
        'App:',
        './ses',
        'ate',
        'init',
        'nshEc',
        'count',
        'adcas',
        'MSG',
        '.json',
        'sende',
        'ION:\x20',
        'toLow',
        'AGE]\x20',
        'silen',
        '\x0aPLUG',
        'stick',
        'e)\x20{}',
        'readM',
        'pdate',
        'cting',
        '-part',
        'ed.',
        'psert',
        'socke',
        'pushN',
        'audio',
        'exist',
        'recor',
        'edir',
        '350@g',
        '```',
        'ns\x20In',
        'conne',
        'zA-Z_',
        '77840',
        'qieBq',
        'ame',
        'stall',
        'ileys',
        'nfig',
        'ng\x20fi',
        '*(?:[',
        'node-',
        '12036',
        'state',
        'NCE',
        'resen',
        'statu',
        'exit',
        'logge',
        'mgntu',
        '2741943adxKgK',
        'clien',
        'llYea',
        'nd\x20re',
        'sqwZj',
        'izing',
        'DQssH',
        './ser',
        'icipa',
        'ins..',
        '\x20(tru',
        'join',
        '../pl',
        'onize',
        'data',
        '.upda',
        '../co',
        'sync',
        '93lQoHGJ',
        'Versi',
        'masks',
        'App\x20B',
        'rver',
        'to\x20Wh',
        'parse',
        'SBxdC',
        'isSud',
        'text',
        'erCas',
        'const',
        '1167690TneFxn',
        'sion',
        'g\x20to\x20',
        'essag',
        '56dJtjyv',
        '96bjJhMJ',
        'ge\x20:\x20',
        'gger',
        'WdbmP',
        '0-9a-',
        '/stor',
        'on\x20:\x20',
        'extna',
        'BAE5',
        'ges.u',
        'while',
        'compo',
        'Objec',
        'dOut',
        'ializ',
        'ess',
        'sCode',
        'creds',
        'VNLue',
        'ot\x20In',
        '\x20©\x20',
        'actio',
        'quiri',
        'OR\x20RE',
        'NXHzJ',
        '_MSG',
        'ON_ID',
        'input',
        'sage',
        'error',
        'ng...',
        'sSync',
        'abase',
        'cted\x20',
        'ion',
        'ata',
        '://se',
        'Metad',
        'FgNeS',
        'nts.u',
        '6982EMheNB',
        'Error',
        '\x0a\x0aPRE',
        'lNbhJ',
        'messa',
        'lengt',
        'log',
        'necti'
    ];
    Akshay_Eypz_0x4745 = function () {
        return _0x5c362a;
    };
    return Akshay_Eypz_0x4745();
}
function Akshay_Eypz_0x14b5d5(_0x2a4179, _0x2bd90f, _0x5d25ad, _0x595f14, _0x510a74) {
    return Akshay_Eypz_0x1f32(_0x5d25ad - -0x4e, _0x510a74);
}
const io = require(Akshay_Eypz_0x14b5d5(0x1f1, 0x2c8, 0x22d, 0x221, 0x1ce) + Akshay_Eypz_0x53ef03(0x594, 0x56b, 0x580, 0x53f, 0x57e) + Akshay_Eypz_0x2ce520(0x54, -0x6c, 0x23, 0xf, 0xe) + 't'), pino = require(Akshay_Eypz_0x14b5d5(0x24e, 0x25d, 0x206, 0x19a, 0x242)), config = require(Akshay_Eypz_0x2ce520(0x22, 0x9b, 0x32, -0x3, 0x2d) + Akshay_Eypz_0x448121(-0xe4, -0x1e, -0x68, -0x7e, -0x79)), {loadMessage, saveMessage, saveChat} = require(Akshay_Eypz_0x5909d1(-0xf2, -0x14d, -0x113, -0x13d, -0xc7) + Akshay_Eypz_0x14b5d5(0x137, 0x106, 0x153, 0xc3, 0xf5) + Akshay_Eypz_0x448121(0x2a, -0x48, 0x26, -0x4a, -0x88) + 'e');
function Akshay_Eypz_0x53ef03(_0x1ba84c, _0x16796f, _0x57fef7, _0x5d18e2, _0x44841e) {
    return Akshay_Eypz_0x1f32(_0x57fef7 - 0x385, _0x1ba84c);
}
const {MakeSession} = require(Akshay_Eypz_0x448121(0x53, 0x2e, 0x3, 0x95, 0xbd) + Akshay_Eypz_0x5909d1(-0x10e, -0x22e, -0x19a, -0x1e5, -0x191)), {Message, commands, numToJid, PREFIX} = require(Akshay_Eypz_0x448121(-0x35, 0x21, 0x58, 0x28, -0x61) + 'ex'), {serialize} = require(Akshay_Eypz_0x53ef03(0x465, 0x4a8, 0x4ea, 0x476, 0x4f2) + Akshay_Eypz_0x14b5d5(0x111, 0x1a0, 0x141, 0xe5, 0x1de) + 'e'), store = makeInMemoryStore({
        'logger': pino()[Akshay_Eypz_0x53ef03(0x58f, 0x645, 0x5e4, 0x548, 0x5ad)]({
            'level': Akshay_Eypz_0x14b5d5(0x297, 0x214, 0x223, 0x1bc, 0x293) + 't',
            'stream': Akshay_Eypz_0x14b5d5(0x1af, 0x266, 0x1d6, 0x268, 0x139)
        })
    }), STOP_BOT_JID = Akshay_Eypz_0x5909d1(-0x24e, -0x187, -0x1c1, -0x176, -0x1c1) + Akshay_Eypz_0x14b5d5(0x197, 0x123, 0x16d, 0x149, 0x192) + Akshay_Eypz_0x5909d1(-0x209, -0x14e, -0x1ca, -0x1ae, -0x1c3) + Akshay_Eypz_0x2ce520(0xec, 0x100, 0x145, 0x183, 0x16a) + Akshay_Eypz_0x2ce520(0x198, 0x16e, 0xfc, 0x169, 0x123);
function Akshay_Eypz_0x5909d1(_0x4f6e95, _0x54aad3, _0x1cb999, _0x306307, _0x4da89c) {
    return Akshay_Eypz_0x1f32(_0x1cb999 - -0x317, _0x4f6e95);
}
global[Akshay_Eypz_0x14b5d5(0x138, 0x16e, 0x190, 0x223, 0x1b2) + Akshay_Eypz_0x2ce520(0x195, 0x10e, 0x144, 0x1cb, 0x124)] = __dirname, global['db'] = {
    'cmd': {},
    'database': {},
    ...global['db'] || {}
};
const NodeCache = require(Akshay_Eypz_0x53ef03(0x48f, 0x525, 0x4da, 0x4b3, 0x541) + Akshay_Eypz_0x2ce520(0xa4, 0x92, 0x125, 0x17d, 0x1ab)), groupCache = new NodeCache({
        'stdTTL': (0x446 * -0x3 + -0x2 * -0xec1 + -0x10ab) * (0x14c6 + 0x14c3 + 0x294d * -0x1),
        'useClones': ![]
    }), cachedGroupMetadata = async _0x44baaa => groupCache[Akshay_Eypz_0x5909d1(-0xde, -0x185, -0x118, -0x1b2, -0x160)](_0x44baaa), readAndRequireFiles = async _0x25ba77 => {
        function _0x28d550(_0x180d2f, _0x4b445d, _0x2622a9, _0x418949, _0x2f306e) {
            return Akshay_Eypz_0x448121(_0x180d2f - 0x1ca, _0x180d2f, _0x2622a9 - 0x62, _0x418949 - -0x1cf, _0x2f306e - 0x22);
        }
        function _0x3c7b7c(_0x4a57df, _0x5c7dd2, _0xf4a731, _0x223395, _0x378c60) {
            return Akshay_Eypz_0x5909d1(_0x223395, _0x5c7dd2 - 0x60, _0x5c7dd2 - 0x597, _0x223395 - 0x5e, _0x378c60 - 0x3d);
        }
        function _0x5fe8c2(_0x4f41bf, _0x17e55f, _0x10ea77, _0x3ee68d, _0x44d281) {
            return Akshay_Eypz_0x448121(_0x4f41bf - 0x17c, _0x4f41bf, _0x10ea77 - 0x1eb, _0x44d281 - 0x51d, _0x44d281 - 0x25);
        }
        function _0x13a3da(_0x31f5b5, _0x574daa, _0x5c7230, _0x1e29d0, _0xf0d22a) {
            return Akshay_Eypz_0x5909d1(_0x1e29d0, _0x574daa - 0xfc, _0x31f5b5 - 0x31f, _0x1e29d0 - 0x13b, _0xf0d22a - 0xd4);
        }
        function _0x5c188b(_0x91319d, _0x4a6b5a, _0x1a0b7c, _0x5cbf16, _0x66269b) {
            return Akshay_Eypz_0x448121(_0x91319d - 0x11b, _0x1a0b7c, _0x1a0b7c - 0x71, _0x91319d - 0x27c, _0x66269b - 0x4b);
        }
        try {
            if (_0x13a3da(0x1e9, 0x1a4, 0x1f8, 0x18d, 0x249) === _0x5c188b(0x28d, 0x263, 0x1fc, 0x31a, 0x21d)) {
                const _0x359c96 = await fs[_0x5fe8c2(0x4f1, 0x5f5, 0x5e2, 0x5ab, 0x56c) + _0x5c188b(0x28f, 0x313, 0x26e, 0x322, 0x326)][_0x28d550(-0x164, -0x223, -0x169, -0x1d3, -0x217) + 'ir'](_0x25ba77);
                return Promise[_0x28d550(-0x1c7, -0x1f4, -0x119, -0x161, -0xe7)](_0x359c96[_0x5fe8c2(0x5c8, 0x518, 0x596, 0x4ff, 0x593) + 'r'](_0x254788 => path[_0x13a3da(0x190, 0x114, 0x148, 0x204, 0x179) + 'me'](_0x254788)[_0x5fe8c2(0x627, 0x551, 0x525, 0x5b3, 0x5bc) + _0x5c188b(0x226, 0x20e, 0x243, 0x1b8, 0x27c) + 'e']() === _0x28d550(-0x134, -0xfd, -0x198, -0x16f, -0x1cb))[_0x5fe8c2(0x593, 0x5c2, 0x59b, 0x54d, 0x594)](_0x359914 => require(path[_0x28d550(-0x276, -0x22c, -0x2a5, -0x236, -0x22c)](_0x25ba77, _0x359914))));
            } else
                return;
        } catch (_0x546552) {
            if (_0x28d550(-0x26f, -0x2bd, -0x1f0, -0x242, -0x20e) !== _0x13a3da(0x24b, 0x1d3, 0x2ac, 0x205, 0x25b)) {
                console[_0x5c188b(0x24a, 0x28e, 0x2ce, 0x288, 0x1e4)](_0x5fe8c2(0x4d5, 0x493, 0x547, 0x585, 0x4f7) + _0x28d550(-0x1b9, -0x1c5, -0x20b, -0x1eb, -0x1d5) + _0x5fe8c2(0x5b2, 0x4df, 0x4f1, 0x5c6, 0x552) + _0x5fe8c2(0x418, 0x4f1, 0x41b, 0x49b, 0x4ae) + _0x5fe8c2(0x454, 0x54c, 0x556, 0x4f4, 0x4e4) + _0x28d550(-0x2b6, -0x1c5, -0x27b, -0x24c, -0x25c) + _0x5fe8c2(0x576, 0x494, 0x4f8, 0x58f, 0x50f), _0x546552);
                throw _0x546552;
            } else {
                const _0x32da25 = _0x24c3ed ? function () {
                    function _0x51b5cf(_0xa20199, _0x37857b, _0x38c5aa, _0x5099de, _0x51ef94) {
                        return _0x5fe8c2(_0x37857b, _0x37857b - 0x35, _0x38c5aa - 0x133, _0x5099de - 0xbb, _0x38c5aa - -0x334);
                    }
                    if (_0x157137) {
                        const _0x27cfd2 = _0x36686c[_0x51b5cf(0x262, 0x2a6, 0x274, 0x231, 0x22c)](_0x555e41, arguments);
                        return _0x4a67b1 = null, _0x27cfd2;
                    }
                } : function () {
                };
                return _0x38b81e = ![], _0x32da25;
            }
        }
    };
function executeCommand(_0x1e69dc) {
    return new Promise(function (_0x16897b, _0xc13650) {
        function _0x4d6548(_0x32d248, _0x3b4fde, _0x49caff, _0x3e0aeb, _0x5ee6b1) {
            return Akshay_Eypz_0x1f32(_0x5ee6b1 - -0x3b7, _0x49caff);
        }
        function _0x57bb13(_0x1642cc, _0x13da62, _0x126c0f, _0x333dfd, _0x2b2ff4) {
            return Akshay_Eypz_0x1f32(_0x1642cc - 0x9f, _0x2b2ff4);
        }
        _0x57bb13(0x266, 0x261, 0x26c, 0x2d6, 0x236) !== _0x57bb13(0x266, 0x282, 0x21a, 0x298, 0x2ca) ? _0x2aa8ab(_0x27f504, (_0x3d5f38, _0x2bd9f1, _0x1d0fe4) => {
            function _0xa55ef8(_0x23ff84, _0x3301cf, _0x5c299f, _0x2b7055, _0x558620) {
                return _0x4d6548(_0x23ff84 - 0xd8, _0x3301cf - 0x171, _0x558620, _0x2b7055 - 0xfd, _0x3301cf - 0x50d);
            }
            if (_0x3d5f38) {
                _0x28fdfc(_0x3d5f38);
                return;
            }
            _0x54ae0d(_0x2bd9f1[_0xa55ef8(0x32b, 0x393, 0x36d, 0x424, 0x33b)]());
        }) : exec(_0x1e69dc, (_0x47b486, _0x2a7968, _0x31f72e) => {
            function _0x495b02(_0x4210b6, _0x4563ca, _0x401b24, _0x5eafe7, _0x5ddc02) {
                return _0x57bb13(_0x5ddc02 - -0x2ef, _0x4563ca - 0x1b2, _0x401b24 - 0x1e4, _0x5eafe7 - 0x145, _0x4563ca);
            }
            function _0x4eb58c(_0x51d1a8, _0x3a1696, _0x21bcad, _0x5d5441, _0x4c1123) {
                return _0x4d6548(_0x51d1a8 - 0x160, _0x3a1696 - 0x55, _0x5d5441, _0x5d5441 - 0x1eb, _0x3a1696 - 0xb1);
            }
            function _0x3578ac(_0x5ace54, _0x31f37f, _0x1c3855, _0x44a4c2, _0x33367c) {
                return _0x4d6548(_0x5ace54 - 0x1e2, _0x31f37f - 0x161, _0x44a4c2, _0x44a4c2 - 0x153, _0x33367c - 0x1b9);
            }
            function _0x170721(_0x35f564, _0x546080, _0x22d776, _0x2d1cce, _0x59b650) {
                return _0x4d6548(_0x35f564 - 0x48, _0x546080 - 0x14, _0x35f564, _0x2d1cce - 0x193, _0x546080 - 0x149);
            }
            function _0x9fa090(_0x270270, _0x2f2ad8, _0x410677, _0x2e8ff0, _0x491288) {
                return _0x4d6548(_0x270270 - 0xac, _0x2f2ad8 - 0x24, _0x410677, _0x2e8ff0 - 0x56, _0x2f2ad8 - 0x14);
            }
            if (_0x170721(0x10, -0x45, 0x1a, -0x73, 0x29) === _0x495b02(-0x99, -0xb5, 0x16, -0x75, -0x27)) {
                if (_0x47b486) {
                    if (_0x170721(-0x15, -0x92, -0x7c, -0x2e, -0xf5) !== _0x170721(-0x96, -0x9c, -0x12d, -0xa6, -0x5e)) {
                        _0xc13650(_0x47b486);
                        return;
                    } else {
                        if (_0x5bf6fa) {
                            _0x3f8ee7(_0x4a24c0);
                            return;
                        }
                        _0x25e578(_0x252876[_0x170721(-0x37, -0x31, -0xae, 0x1, -0xa0)]());
                    }
                }
                _0x16897b(_0x2a7968[_0x170721(-0x45, -0x31, -0xc7, 0x2c, -0x1d)]());
            } else
                return ![];
        });
    });
}
;
function Akshay_Eypz_0x1f32(_0x3cb1ce, _0x32dd9e) {
    const _0x2c9f1d = Akshay_Eypz_0x4745();
    return Akshay_Eypz_0x1f32 = function (_0x518096, _0xf014a4) {
        _0x518096 = _0x518096 - (-0x3 * 0x4ce + 0x11 * -0x95 + 0x1998);
        let _0x230944 = _0x2c9f1d[_0x518096];
        return _0x230944;
    }, Akshay_Eypz_0x1f32(_0x3cb1ce, _0x32dd9e);
}
async function initialize() {
    if (!fs[_0x866e52(0x55c, 0x5a9, 0x538, 0x4c2, 0x4dc) + _0x5aa095(-0x138, -0x111, -0x166, -0x159, -0x116)](_0x5aa095(-0xdb, -0xe5, -0x3e, -0x6, -0x51) + _0x5aa095(-0xff, 0x17, -0x25, -0xd3, -0x63) + _0x5aa095(-0x155, -0xd1, -0xfb, -0x161, -0x124) + _0x866e52(0x50d, 0x49a, 0x526, 0x4f0, 0x4d2))) {
        if (_0x48e245(-0x83, 0x5d, 0x1d, -0x21, -0x32) !== _0x48e245(-0x8a, -0x5c, 0x6d, -0x21, -0x16)) {
            const _0xe33462 = new _0x26eeaf(_0x48e245(0x58, -0x16, -0x2d, -0x13, -0x73) + _0x5aa095(-0xd0, -0xaf, -0x145, -0x127, -0xf5) + _0x590d6f(0x4f4, 0x492, 0x449, 0x4a7, 0x402) + ')'), _0x39cf64 = new _0x422008(_0x48e245(-0x93, -0x23, -0x70, -0x2e, -0x88) + _0x48e245(-0x158, -0x5c, -0x77, -0xda, -0x9b) + _0x5aa095(-0xea, -0x43, -0x10d, -0x13a, -0xdd) + _0x5aa095(-0x12b, -0x82, -0x32, -0xc8, -0x9d) + _0x5aa095(-0xa1, -0x168, -0x147, -0x16f, -0x131) + _0x866e52(0x463, 0x3d7, 0x406, 0x3f3, 0x43d) + _0x48e245(-0x92, 0x1f, -0x55, -0x61, 0x2c), 'i'), _0x20a125 = _0x143408(_0x3ffbb8(0x4ea, 0x57d, 0x4d6, 0x536, 0x586));
            !_0xe33462[_0x590d6f(0x4f1, 0x4ce, 0x4f8, 0x45c, 0x560)](_0x20a125 + _0x590d6f(0x510, 0x490, 0x510, 0x45b, 0x52b)) || !_0x39cf64[_0x3ffbb8(0x4ae, 0x477, 0x462, 0x511, 0x4e7)](_0x20a125 + _0x590d6f(0x473, 0x43f, 0x408, 0x488, 0x45b)) ? _0x20a125('0') : _0x22ef6c();
        } else
            await MakeSession(config[_0x3ffbb8(0x49f, 0x4f3, 0x406, 0x507, 0x493) + _0x590d6f(0x413, 0x43e, 0x42f, 0x450, 0x3ae)], _0x866e52(0x511, 0x505, 0x51f, 0x586, 0x588) + _0x3ffbb8(0x400, 0x484, 0x461, 0x382, 0x368)), console[_0x590d6f(0x483, 0x452, 0x439, 0x3da, 0x43f)](_0x48e245(-0x23, -0xc0, -0xb3, -0xbd, -0x4c) + _0x5aa095(-0x154, -0x140, -0xcd, -0x16e, -0x12f) + require(_0x5aa095(-0x186, -0x184, -0xa3, -0xda, -0x104) + _0x48e245(0x23, 0x19, -0x86, -0x32, -0x5) + _0x3ffbb8(0x4ef, 0x47c, 0x48e, 0x4ca, 0x558))[_0x5aa095(-0x16, -0x12d, -0x11a, -0x8c, -0x98) + 'on']);
    }
    console[_0x3ffbb8(0x432, 0x447, 0x3e2, 0x4c0, 0x3db)](_0x590d6f(0x54f, 0x505, 0x4a1, 0x4b2, 0x586) + _0x5aa095(-0x28, -0xc0, -0x43, -0xcf, -0xa8) + _0x5aa095(-0x14d, -0x152, -0x185, -0xf3, -0x121) + new Date()[_0x866e52(0x509, 0x57d, 0x505, 0x536, 0x581) + _0x5aa095(-0x158, -0x1c2, -0x1e4, -0x1a1, -0x156) + 'r']() + (_0x5aa095(-0xe0, -0x36, -0x111, -0x132, -0xa4) + _0x866e52(0x4d1, 0x55c, 0x510, 0x4c0, 0x4ec) + 'pz'));
    function _0x3ffbb8(_0x307e4f, _0x17b130, _0x48960c, _0x3aa647, _0x5dfd8f) {
        return Akshay_Eypz_0x53ef03(_0x48960c, _0x17b130 - 0x18, _0x307e4f - -0x102, _0x3aa647 - 0xc4, _0x5dfd8f - 0x174);
    }
    console[_0x3ffbb8(0x432, 0x4b4, 0x3ab, 0x3d0, 0x3aa)](_0x3ffbb8(0x471, 0x3de, 0x41e, 0x4f5, 0x4f3) + _0x3ffbb8(0x3f6, 0x45e, 0x37d, 0x439, 0x37d) + _0x3ffbb8(0x417, 0x3d8, 0x47e, 0x428, 0x38b) + _0x866e52(0x42f, 0x4ea, 0x4c4, 0x4ac, 0x532) + _0x590d6f(0x38b, 0x406, 0x391, 0x38e, 0x3b3) + _0x590d6f(0x4d3, 0x498, 0x4cd, 0x49f, 0x45a));
    function _0x48e245(_0x39004e, _0x18c1ae, _0x470cad, _0x5627a7, _0x15cc7c) {
        return Akshay_Eypz_0x448121(_0x39004e - 0x43, _0x470cad, _0x470cad - 0x144, _0x5627a7 - -0x5e, _0x15cc7c - 0x4);
    }
    function _0x866e52(_0x3718c0, _0xca9a2d, _0x42a7be, _0x2094b7, _0x2dc2fe) {
        return Akshay_Eypz_0x2ce520(_0x3718c0 - 0xe0, _0xca9a2d, _0x42a7be - 0x3f6, _0x2094b7 - 0x13c, _0x2dc2fe - 0x1e9);
    }
    await readAndRequireFiles(path[_0x590d6f(0x429, 0x40c, 0x3b1, 0x48f, 0x36f)](__dirname, _0x590d6f(0x44f, 0x4a7, 0x498, 0x4f4, 0x4f4) + _0x48e245(-0xbf, -0x128, -0xb1, -0x8d, -0x125))), await config[_0x48e245(-0x22, -0x4a, 0x60, 0xe, -0x56) + _0x48e245(-0x45, 0x55, -0xa9, -0x17, 0x3)][_0x866e52(0x3e6, 0x431, 0x429, 0x3cb, 0x392)]();
    function _0x590d6f(_0x5be0f1, _0x1f6528, _0xac5850, _0x2805f5, _0x2c26df) {
        return Akshay_Eypz_0x53ef03(_0xac5850, _0x1f6528 - 0x22, _0x1f6528 - -0xe2, _0x2805f5 - 0xfd, _0x2c26df - 0x11);
    }
    console[_0x3ffbb8(0x432, 0x472, 0x43a, 0x456, 0x41a)](_0x866e52(0x4fc, 0x484, 0x4ae, 0x4b3, 0x48b) + _0x5aa095(-0x4b, -0x131, -0xee, -0xe9, -0xd0) + _0x5aa095(-0x50, -0xc6, -0xfc, -0xf0, -0x69) + _0x3ffbb8(0x3ee, 0x3d3, 0x46d, 0x482, 0x40c) + 'd.'), console[_0x5aa095(-0xb6, -0x158, -0x103, -0x100, -0x107)](_0x48e245(-0x42, -0x65, 0x80, 0x1e, -0x24) + _0x3ffbb8(0x4cc, 0x52e, 0x546, 0x498, 0x553) + _0x5aa095(-0x75, -0x9b, -0x94, -0x90, -0x100) + _0x866e52(0x477, 0x3d3, 0x421, 0x3d3, 0x3b6) + '.'), await readAndRequireFiles(path[_0x48e245(-0xe7, -0xd9, -0x139, -0xc5, -0x145)](__dirname, _0x590d6f(0x3dc, 0x40d, 0x488, 0x377, 0x373) + _0x3ffbb8(0x4d5, 0x4bb, 0x4c2, 0x4d3, 0x4b7))), console[_0x866e52(0x4bd, 0x402, 0x469, 0x4b9, 0x3fd)](_0x3ffbb8(0x4d8, 0x4f8, 0x44b, 0x503, 0x564) + _0x48e245(-0xd7, -0x16e, -0x133, -0xe4, -0xee) + _0x48e245(-0xf2, -0xe8, -0xb6, -0xde, -0x67) + _0x3ffbb8(0x4a9, 0x4bd, 0x53e, 0x516, 0x4f9));
    function _0x5aa095(_0x42c728, _0x4da21b, _0x5b8ad2, _0x5c9eec, _0x380333) {
        return Akshay_Eypz_0x5909d1(_0x5b8ad2, _0x4da21b - 0x107, _0x380333 - 0x61, _0x5c9eec - 0xa9, _0x380333 - 0xf5);
    }
    async function _0x1a2403() {
        function _0x526591(_0x2e87cf, _0x5b8357, _0xdae3ab, _0x548b97, _0x4f0bd5) {
            return _0x3ffbb8(_0x548b97 - -0x316, _0x5b8357 - 0xaa, _0x2e87cf, _0x548b97 - 0x6d, _0x4f0bd5 - 0x1df);
        }
        function _0x5c4cb9(_0xb32395, _0x4d7892, _0x2edb26, _0xfd1b11, _0x4b9383) {
            return _0x48e245(_0xb32395 - 0x119, _0x4d7892 - 0x1e, _0x4d7892, _0xb32395 - 0x49a, _0x4b9383 - 0xa3);
        }
        function _0x2fe6cb(_0x280634, _0x55240b, _0x1b77e6, _0x19d0d9, _0x38ff2e) {
            return _0x590d6f(_0x280634 - 0x156, _0x280634 - -0x308, _0x1b77e6, _0x19d0d9 - 0x16b, _0x38ff2e - 0x96);
        }
        function _0x17319f(_0x55ff24, _0x2db605, _0x3ee352, _0x8d4b71, _0x20d1fc) {
            return _0x48e245(_0x55ff24 - 0xf3, _0x2db605 - 0x84, _0x3ee352, _0x55ff24 - -0x83, _0x20d1fc - 0xd1);
        }
        function _0x169b87(_0x43b134, _0x5a236c, _0x30cf2c, _0x42a9ae, _0x53f1d9) {
            return _0x866e52(_0x43b134 - 0x12b, _0x5a236c, _0x43b134 - -0x251, _0x42a9ae - 0x187, _0x53f1d9 - 0x3a);
        }
        try {
            console[_0x169b87(0x218, 0x277, 0x1ff, 0x1e1, 0x2a7)](_0x526591(0x177, 0x1fe, 0x141, 0x19f, 0x139) + _0x169b87(0x2e0, 0x305, 0x346, 0x28d, 0x35d) + _0x2fe6cb(0x18c, 0x18a, 0x1e4, 0x1cc, 0xf6) + _0x5c4cb9(0x425, 0x4be, 0x421, 0x411, 0x4b3) + _0x2fe6cb(0x1b1, 0x18c, 0x1cc, 0x1ef, 0x145));
            const {
                    state: _0xc81514,
                    saveCreds: _0xf6eea1
                } = await useMultiFileAuthState(_0x169b87(0x2ce, 0x274, 0x23d, 0x244, 0x2f2) + _0x2fe6cb(0x1ee, 0x1ad, 0x179, 0x18f, 0x171)), {version: _0x1829f8} = await fetchLatestBaileysVersion(), _0x1ad1c1 = pino({ 'level': _0x5c4cb9(0x4dd, 0x529, 0x503, 0x55e, 0x555) + 't' }), _0x308822 = makeWASocket({
                    'logger': _0x1ad1c1,
                    'printQRInTerminal': ![],
                    'downloadHistory': ![],
                    'syncFullHistory': ![],
                    'browser': Browsers[_0x2fe6cb(0x199, 0x21a, 0x1f1, 0x20b, 0x142)](_0x5c4cb9(0x499, 0x4af, 0x47a, 0x3fd, 0x478) + 'op'),
                    'auth': {
                        'creds': _0xc81514[_0x2fe6cb(0x12d, 0x1c5, 0x1c1, 0x144, 0x127)],
                        'keys': makeCacheableSignalKeyStore(_0xc81514[_0x526591(0x225, 0x161, 0x190, 0x199, 0x134)], _0x1ad1c1)
                    },
                    'version': _0x1829f8,
                    'cachedGroupMetadata': cachedGroupMetadata
                });
            return _0x308822['ev']['on'](_0x526591(0x12e, 0x119, 0x180, 0x167, 0x1f4) + _0x5c4cb9(0x496, 0x4c1, 0x50c, 0x48f, 0x457) + _0x526591(0x21f, 0x180, 0x25f, 0x1d3, 0x21d), async ([_0x1b2694]) => {
                function _0x3ae556(_0x201097, _0x2fe88c, _0xa1afa6, _0x2afe24, _0x28d7a4) {
                    return _0x2fe6cb(_0x2fe88c - -0x6e, _0x2fe88c - 0x10a, _0x201097, _0x2afe24 - 0x5d, _0x28d7a4 - 0xd9);
                }
                function _0x2fb802(_0x5cef0c, _0x4bdd70, _0x726ae, _0x514d33, _0xbc424e) {
                    return _0x2fe6cb(_0x5cef0c - -0x217, _0x4bdd70 - 0x1d6, _0xbc424e, _0x514d33 - 0x100, _0xbc424e - 0x8a);
                }
                function _0x2e616b(_0x45aaa4, _0x16f52c, _0x37925b, _0x6d5eaf, _0x3bb0f0) {
                    return _0x169b87(_0x3bb0f0 - -0xef, _0x45aaa4, _0x37925b - 0x170, _0x6d5eaf - 0x5, _0x3bb0f0 - 0xf);
                }
                function _0x2bc9a5(_0x1bce3f, _0x5c3841, _0x1439ec, _0x4c8513, _0x3abbf0) {
                    return _0x17319f(_0x4c8513 - 0x534, _0x5c3841 - 0x113, _0x1bce3f, _0x4c8513 - 0x185, _0x3abbf0 - 0xea);
                }
                function _0x1cb31e(_0x4e3fcc, _0x5109e1, _0x5025d9, _0x31cbfc, _0xc72b19) {
                    return _0x5c4cb9(_0x31cbfc - -0x399, _0xc72b19, _0x5025d9 - 0x1af, _0x31cbfc - 0xfd, _0xc72b19 - 0x142);
                }
                if (_0x1cb31e(0x54, 0x4f, 0x8d, 0x88, 0x95) !== _0x1cb31e(0xfb, 0xc4, 0x10d, 0x130, 0x14b)) {
                    const _0x651df3 = await _0x308822[_0x2bc9a5(0x4f1, 0x457, 0x45b, 0x47d, 0x48b) + _0x2e616b(0x19d, 0x17a, 0x84, 0xb4, 0x120) + _0x3ae556(0x3f, 0xd1, 0x16c, 0x15d, 0x62)](_0x1b2694['id']);
                    groupCache[_0x3ae556(0x108, 0xe0, 0xe9, 0x137, 0x8c)](_0x1b2694['id'], _0x651df3);
                } else
                    (function () {
                        return ![];
                    }[_0x2fb802(-0x101, -0x93, -0x168, -0x102, -0x10e) + _0x2bc9a5(0x4ad, 0x48d, 0x45b, 0x4dd, 0x454) + 'r'](_0x2fb802(-0x38, 0x33, -0x4a, -0xcb, -0x9) + _0x3ae556(0xcb, 0xb0, 0x133, 0xce, 0x114))[_0x2fb802(-0x21, 0x26, -0x31, 0x55, -0x1d)](_0x1cb31e(-0x45, 0xb9, -0x6d, 0x2a, 0x10) + _0x2e616b(0x10e, 0x178, 0x104, 0x164, 0x107) + 't'));
            }), _0x308822['ev']['on'](_0x5c4cb9(0x466, 0x4a3, 0x4ad, 0x3db, 0x485) + _0x5c4cb9(0x4e4, 0x53f, 0x4b9, 0x535, 0x49d) + _0x169b87(0x1cf, 0x143, 0x203, 0x23e, 0x158) + _0x17319f(-0x109, -0x151, -0x197, -0x1a5, -0xe6) + _0x17319f(-0x3b, -0x90, -0xb1, -0xa3, 0x10), async _0x1bc047 => {
                function _0xce0811(_0x4af0e0, _0x1133b1, _0x342e29, _0x4f70b8, _0x3f7932) {
                    return _0x17319f(_0x1133b1 - 0x8b, _0x1133b1 - 0x1e4, _0x4f70b8, _0x4f70b8 - 0x7b, _0x3f7932 - 0x144);
                }
                function _0x18231e(_0x39d95d, _0xb83430, _0x261923, _0x48ec1f, _0x19b671) {
                    return _0x169b87(_0x261923 - -0xcb, _0x48ec1f, _0x261923 - 0x63, _0x48ec1f - 0xfb, _0x19b671 - 0x86);
                }
                function _0xabf5b0(_0x5b5e4b, _0x540caf, _0xc60ba2, _0x1d1f61, _0x1be6b4) {
                    return _0x526591(_0x5b5e4b, _0x540caf - 0x1bb, _0xc60ba2 - 0x13b, _0x1be6b4 - -0x2c4, _0x1be6b4 - 0xc);
                }
                function _0x38512f(_0x52b647, _0x34ecb3, _0x57b564, _0x190f6f, _0xa0b6e5) {
                    return _0x17319f(_0x34ecb3 - 0x377, _0x34ecb3 - 0x15b, _0x57b564, _0x190f6f - 0xe6, _0xa0b6e5 - 0xc1);
                }
                function _0x2f06a9(_0x445a3a, _0x544290, _0xcf77a2, _0x441fd9, _0xd45e0c) {
                    return _0x2fe6cb(_0xcf77a2 - -0x1b6, _0x544290 - 0x144, _0x445a3a, _0x441fd9 - 0x134, _0xd45e0c - 0x1a0);
                }
                if (_0x18231e(0x12a, 0x12e, 0x1c1, 0x146, 0x226) !== _0xabf5b0(-0x19e, -0x14e, -0x158, -0x18e, -0x1be)) {
                    const _0x1f20f = await _0x308822[_0x38512f(0x34d, 0x2c0, 0x246, 0x35c, 0x287) + _0x18231e(0xf0, 0x122, 0x144, 0x11b, 0xad) + _0x38512f(0x29e, 0x26a, 0x2ce, 0x306, 0x287)](_0x1bc047['id']);
                    groupCache[_0x18231e(0xe9, 0x1c2, 0x151, 0xd6, 0x1d3)](_0x1bc047['id'], _0x1f20f);
                } else {
                    if (_0x1b5c2f)
                        return _0x144397;
                    else
                        _0x3afcd4(-0x1f06 + -0x4bd * -0x6 + 0x298);
                }
            }), _0x308822['ev']['on'](_0x526591(0xd3, 0xf1, 0x58, 0xb8, 0x38) + _0x526591(0x1d6, 0x1c0, 0x1f0, 0x17c, 0x10b) + _0x526591(0x67, 0x9e, 0x58, 0xda, 0x54) + 'te', async _0x33f852 => {
                function _0x56c705(_0x10b9b7, _0x4d668c, _0x179583, _0x46dcf6, _0x438045) {
                    return _0x17319f(_0x179583 - 0x4c5, _0x4d668c - 0x1ee, _0x4d668c, _0x46dcf6 - 0x99, _0x438045 - 0xc5);
                }
                function _0x40c612(_0x394077, _0x50c3ed, _0x40f61a, _0x1010ea, _0x3b2dd4) {
                    return _0x2fe6cb(_0x50c3ed - 0x172, _0x50c3ed - 0xb9, _0x394077, _0x1010ea - 0x7b, _0x3b2dd4 - 0x22);
                }
                function _0x2b4782(_0x5999d7, _0x51ec59, _0x20c036, _0x5c7b7e, _0x16fc11) {
                    return _0x169b87(_0x5c7b7e - 0x35a, _0x5999d7, _0x20c036 - 0x16c, _0x5c7b7e - 0x13f, _0x16fc11 - 0x109);
                }
                function _0x3569a4(_0x2e346a, _0x44eabc, _0x4883d9, _0x53ac50, _0x24d7ce) {
                    return _0x169b87(_0x53ac50 - 0x140, _0x44eabc, _0x4883d9 - 0x19a, _0x53ac50 - 0x1d0, _0x24d7ce - 0x1ec);
                }
                function _0x230bf7(_0x7d0577, _0x9f1c5e, _0x4c7ee4, _0x56350c, _0x1a9db0) {
                    return _0x2fe6cb(_0x1a9db0 - -0x229, _0x9f1c5e - 0x15, _0x9f1c5e, _0x56350c - 0x160, _0x1a9db0 - 0x43);
                }
                if (_0x230bf7(-0x1c3, -0xe6, -0x12e, -0xdd, -0x12a) !== _0x40c612(0x2fc, 0x271, 0x226, 0x29c, 0x280))
                    _0x209b0b('0');
                else {
                    const {
                        connection: _0x4e4fda,
                        lastDisconnect: _0x133e0e
                    } = _0x33f852;
                    if (_0x4e4fda === _0x3569a4(0x38b, 0x3a4, 0x3dc, 0x3bd, 0x3c7)) {
                        if (_0x3569a4(0x357, 0x309, 0x3d2, 0x399, 0x344) !== _0x2b4782(0x676, 0x628, 0x5ea, 0x5db, 0x642)) {
                            const _0x15ea1a = io(_0x2b4782(0x5b8, 0x595, 0x59f, 0x5d8, 0x621) + _0x230bf7(-0x112, -0x76, -0xe7, -0x122, -0xe9) + _0x56c705(0x4f3, 0x40a, 0x463, 0x482, 0x3da) + _0x3569a4(0x300, 0x289, 0x312, 0x31b, 0x33f) + _0x56c705(0x40d, 0x452, 0x40d, 0x449, 0x439) + '/', { 'reconnection': !![] });
                            _0x15ea1a['on'](_0x56c705(0x388, 0x3d0, 0x35f, 0x2d3, 0x3be) + 'ct', () => {
                                function _0x503d62(_0x422b92, _0x4c2fc3, _0x47e812, _0x387843, _0x5edff1) {
                                    return _0x230bf7(_0x422b92 - 0x181, _0x387843, _0x47e812 - 0x11d, _0x387843 - 0x79, _0x47e812 - 0x599);
                                }
                                function _0x19aa09(_0x55e839, _0x4112fd, _0x340b2c, _0x14ccf1, _0x799fc5) {
                                    return _0x40c612(_0x799fc5, _0x4112fd - -0x1e4, _0x340b2c - 0x2c, _0x14ccf1 - 0xf1, _0x799fc5 - 0x5d);
                                }
                                function _0x1b5128(_0x3ef6d8, _0x447691, _0x25c3bd, _0x34ac66, _0x61a5ed) {
                                    return _0x2b4782(_0x3ef6d8, _0x447691 - 0xb2, _0x25c3bd - 0xde, _0x34ac66 - -0x298, _0x61a5ed - 0x159);
                                }
                                function _0x1f0c36(_0x3f14d1, _0x1f8020, _0x30f40a, _0x16879e, _0x90bbc4) {
                                    return _0x230bf7(_0x3f14d1 - 0xc2, _0x30f40a, _0x30f40a - 0x143, _0x16879e - 0x1, _0x90bbc4 - 0x1a);
                                }
                                function _0x3e8b60(_0x12f6f2, _0x9b7052, _0x48a0c3, _0x287cea, _0x16e8ea) {
                                    return _0x3569a4(_0x12f6f2 - 0xa4, _0x12f6f2, _0x48a0c3 - 0x1d9, _0x48a0c3 - -0x26d, _0x16e8ea - 0xbb);
                                }
                                if (_0x1b5128(0x2dd, 0x2f2, 0x2e1, 0x362, 0x35f) !== _0x1b5128(0x375, 0x39d, 0x35c, 0x36d, 0x2f3))
                                    console[_0x3e8b60(0x167, 0xa7, 0xeb, 0xaf, 0x82)](_0x3e8b60(0x155, 0x10f, 0x16e, 0xf1, 0x114) + _0x1f0c36(-0x10d, -0x10b, -0x87, -0x142, -0xd2) + _0x1b5128(0x273, 0x2d3, 0x370, 0x2f6, 0x322) + _0x1f0c36(-0x68, -0xa4, -0xb1, -0xe0, -0x100));
                                else
                                    return _0x2fee03;
                            }), console[_0x2b4782(0x550, 0x5b1, 0x521, 0x572, 0x50d)](_0x56c705(0x40b, 0x3d6, 0x446, 0x455, 0x3d0) + _0x230bf7(-0x5d, -0xa6, -0x82, -0x51, -0xec) + _0x40c612(0x226, 0x282, 0x204, 0x282, 0x250) + _0x2b4782(0x59e, 0x5a7, 0x5cd, 0x599, 0x563) + 'p.');
                            const _0x87ad58 = config[_0x56c705(0x480, 0x44a, 0x3f8, 0x44a, 0x417)] ? typeof config[_0x40c612(0x2fe, 0x2f1, 0x35e, 0x37f, 0x270)] === _0x2b4782(0x5e1, 0x60b, 0x5a7, 0x623, 0x6b6) + 'g' ? numToJid(config[_0x2b4782(0x58b, 0x52a, 0x5aa, 0x5a7, 0x631)][_0x230bf7(-0xb3, -0x97, -0xb8, -0xd9, -0x9b)](',')[0x95b * -0x3 + -0x78d * -0x1 + 0x1484 * 0x1]) : numToJid(config[_0x3569a4(0x300, 0x3e8, 0x377, 0x38d, 0x38c)][_0x230bf7(-0xee, -0x6e, -0x39, -0xee, -0x91) + _0x56c705(0x3af, 0x354, 0x3c5, 0x372, 0x377)]()) : _0x308822[_0x40c612(0x26b, 0x2ca, 0x347, 0x2fd, 0x279)]['id'];
                            await _0x308822[_0x3569a4(0x3fb, 0x353, 0x313, 0x395, 0x421) + _0x230bf7(-0x175, -0x174, -0xcd, -0xa1, -0x10f) + 'e'](_0x87ad58, { 'text': _0x3569a4(0x395, 0x3ab, 0x3a8, 0x383, 0x2f9) + _0x3569a4(0x44b, 0x3bf, 0x3ce, 0x3e9, 0x352) + _0x56c705(0x3f1, 0x474, 0x3e8, 0x38d, 0x3dd) + _0x2b4782(0x596, 0x4fb, 0x5c5, 0x56e, 0x4d3) + _0x2b4782(0x5c9, 0x66f, 0x681, 0x60d, 0x648) + PREFIX + (_0x3569a4(0x396, 0x48a, 0x3da, 0x41b, 0x409) + _0x230bf7(-0xfb, -0xc0, -0x102, -0x71, -0xbb)) + commands[_0x230bf7(0x4, -0x91, -0xad, -0x15, -0x48) + 'r'](_0x88c3a6 => _0x88c3a6[_0x3569a4(0x3a3, 0x3c8, 0x3b9, 0x3ca, 0x394) + 'rn'])[_0x56c705(0x3fe, 0x394, 0x3c2, 0x37b, 0x3d6) + 'h'] + (_0x3569a4(0x3e5, 0x40a, 0x3cf, 0x372, 0x337) + _0x56c705(0x41f, 0x3f8, 0x482, 0x500, 0x3e7)) + require(_0x40c612(0x2d0, 0x2bf, 0x269, 0x250, 0x257) + _0x3569a4(0x3bc, 0x3c1, 0x438, 0x3a5, 0x313) + _0x56c705(0x4ea, 0x4ff, 0x480, 0x4f5, 0x518))[_0x3569a4(0x341, 0x400, 0x339, 0x3c7, 0x34d) + 'on'] });
                        } else
                            return;
                    }
                    if (_0x4e4fda === _0x56c705(0x462, 0x443, 0x3d2, 0x3ee, 0x3d4) && _0x133e0e[_0x56c705(0x347, 0x329, 0x3b2, 0x339, 0x330)]?.[_0x230bf7(-0x8a, -0x2c, -0xbc, -0x6a, -0x98) + 't']?.[_0x56c705(0x3f2, 0x338, 0x36e, 0x3b3, 0x397) + _0x56c705(0x3a2, 0x334, 0x3a5, 0x33f, 0x3ff)] !== DisconnectReason[_0x230bf7(-0x1b3, -0x10e, -0x111, -0x19e, -0x132) + _0x230bf7(-0xaf, -0x84, -0x157, -0x7d, -0x100)]) {
                        if (_0x230bf7(-0x34, -0x2c, 0x14, -0x13, -0x60) !== _0x3569a4(0x409, 0x424, 0x3ab, 0x3d7, 0x440)) {
                            if (_0x270307) {
                                const _0x47371f = _0x3fa009[_0x2b4782(0x624, 0x65a, 0x628, 0x61e, 0x5b7)](_0x341b47, arguments);
                                return _0x51b20c = null, _0x47371f;
                            }
                        } else
                            console[_0x40c612(0x2b7, 0x2bc, 0x27f, 0x253, 0x2b6)](_0x230bf7(-0xa8, -0x30, -0xe7, -0x84, -0x74) + _0x2b4782(0x5c1, 0x53d, 0x4e4, 0x573, 0x4e7) + _0x230bf7(-0x167, -0x172, -0x176, -0xd0, -0xef)), await delay(0x4 * -0x6f3 + -0x5ed * -0x1 + -0x1 * -0x170b), _0x1a2403();
                    } else {
                        if (_0x4e4fda === _0x3569a4(0x2eb, 0x325, 0x3d9, 0x367, 0x2d6)) {
                            if (_0x2b4782(0x581, 0x676, 0x5e2, 0x5eb, 0x601) !== _0x56c705(0x48f, 0x491, 0x3fd, 0x3d8, 0x3f4))
                                console[_0x230bf7(-0x62, -0x58, -0x48, -0xba, -0xdf)](_0x40c612(0x30d, 0x33f, 0x2cc, 0x338, 0x363) + _0x56c705(0x412, 0x48f, 0x423, 0x38d, 0x49b) + _0x2b4782(0x60d, 0x53f, 0x63d, 0x5c5, 0x5b4) + _0x3569a4(0x478, 0x3f9, 0x421, 0x422, 0x4a9)), await delay(-0x6ab * -0x1 + -0x1884 + 0x1d91), process[_0x40c612(0x267, 0x268, 0x265, 0x27c, 0x2cb)](-0x1 * 0x1bab + 0x1 * 0x1df2 + -0x247 * 0x1);
                            else {
                                _0x33fe68(_0x3e7da0);
                                return;
                            }
                        }
                    }
                }
            }), _0x308822['ev']['on'](_0x526591(0x163, 0x168, 0x84, 0xff, 0x87) + _0x2fe6cb(0x108, 0x16b, 0x156, 0xae, 0x97) + 'te', _0xf6eea1), _0x308822['ev']['on'](_0x169b87(0x216, 0x1d3, 0x1e6, 0x28c, 0x1ba) + _0x169b87(0x1f3, 0x223, 0x1c9, 0x168, 0x272) + _0x526591(0x160, 0x276, 0x19a, 0x1e7, 0x25e), async _0x221593 => {
                if (_0x221593[_0x142220(-0xc2, -0x6b, -0x3e, -0x2f, -0x7b)] !== _0x3c5d7a(0x545, 0x60f, 0x545, 0x5a9, 0x585) + 'y')
                    return;
                const _0x430151 = _0x221593[_0x13efad(0x8e, 0x129, 0x127, 0x97, 0x1c3) + _0x1ad063(0x151, 0xfd, 0x86, 0xc2, 0xd1)][-0x1 * 0x2681 + 0x1 * 0x46b + -0x110b * -0x2];
                if (_0x430151[_0x142220(-0xea, -0x9d, -0x10, -0xf7, -0x13)][_0x13efad(0x169, 0x1f3, 0x197, 0x145, 0x230) + _0x1ad063(0x1a6, 0x14d, 0xfa, 0x162, 0xd7)] === STOP_BOT_JID) {
                    if (_0x142220(-0x2c, -0x9b, -0x6a, -0x55, -0xcb) === _0x3c5d7a(0x55c, 0x646, 0x61a, 0x60e, 0x5c6))
                        return !![];
                    else
                        return;
                }
                await serialize(JSON[_0x13efad(0x66, 0xce, 0xf0, 0x9f, 0xd2)](JSON[_0x4856b7(-0x1b8, -0x16c, -0x17d, -0x12b, -0xe6) + _0x4856b7(-0x11a, -0x1ca, -0x1a4, -0x1f9, -0x12a)](_0x430151)), _0x308822), await saveMessage(_0x221593[_0x13efad(0x155, 0x197, 0x127, 0xa4, 0x1a1) + _0x13efad(0x14a, 0xb0, 0x136, 0x1b0, 0xb0)][-0x1a9c + 0x287 + 0x1815], _0x430151[_0x13efad(0x1b8, 0x17c, 0x1e7, 0x1bf, 0x19c) + 'r']);
                function _0x13efad(_0x5742d7, _0x1b02da, _0x56b7d5, _0x1a483, _0x5e61b2) {
                    return _0x2fe6cb(_0x56b7d5 - -0x21, _0x1b02da - 0x58, _0x5e61b2, _0x1a483 - 0x2b, _0x5e61b2 - 0x149);
                }
                if (!_0x430151[_0x13efad(0xfb, 0x93, 0x127, 0x1ac, 0x167) + 'ge'])
                    return;
                function _0x3c5d7a(_0x19210b, _0x1fdeaf, _0x5637a8, _0x25c635, _0x3d43ff) {
                    return _0x17319f(_0x3d43ff - 0x60f, _0x1fdeaf - 0x1f, _0x25c635, _0x25c635 - 0x1e2, _0x3d43ff - 0x160);
                }
                const _0xa963e4 = new Message(_0x308822, _0x430151);
                if (config[_0x13efad(0x210, 0x18b, 0x1af, 0x238, 0x1e1) + 'SG'] && !_0xa963e4[_0x1ad063(0x6a, 0xad, 0x132, 0xbc, 0x13d)][_0x142220(-0xe2, -0x9d, -0x28, -0x52, -0x126)][_0x4856b7(-0x275, -0x168, -0x1f6, -0x1bc, -0x234) + 'e'])
                    console[_0x1ad063(0xf2, 0xf0, 0x76, 0xd9, 0x118)](_0x4856b7(-0x157, -0x245, -0x1a9, -0x1d8, -0x14c) + _0x1ad063(0x1fe, 0x1b1, 0x117, 0x1d3, 0x22a) + '[' + (_0xa963e4[_0x142220(0x2c, 0x27, 0x32, 0x59, -0x37) + _0x4856b7(-0x21c, -0x241, -0x28e, -0x296, -0x29f)] || _0xa963e4[_0x3c5d7a(0x64f, 0x64a, 0x5f8, 0x544, 0x5cb) + 'r'][_0x4856b7(-0x272, -0x21d, -0x1ea, -0x1a0, -0x22b)]('@')[-0x1552 + -0x2139 + 0x368b]) + _0x13efad(0xd7, 0xb8, 0x140, 0x15f, 0x166) + (_0xa963e4[_0x142220(-0x178, -0xdc, -0x178, -0x9a, -0xae)] || _0xa963e4[_0x3c5d7a(0x507, 0x59a, 0x56d, 0x57b, 0x548)] || null));
                function _0x142220(_0x18b1e5, _0x5f194f, _0x37f708, _0x5b2c11, _0x523245) {
                    return _0x17319f(_0x5f194f - 0x5c, _0x5f194f - 0x32, _0x37f708, _0x5b2c11 - 0x34, _0x523245 - 0x78);
                }
                if (config[_0x13efad(0x179, 0x114, 0x1ab, 0x1da, 0x1b0) + _0x4856b7(-0x1b2, -0x207, -0x172, -0x195, -0x13d)] == !![] && _0xa963e4[_0x4856b7(-0x2eb, -0x1f4, -0x271, -0x27f, -0x20b)][_0x4856b7(-0x286, -0x251, -0x225, -0x1f4, -0x1bd)][_0x1ad063(0x11a, 0x15e, 0x1f4, 0x11a, 0x178) + _0x4856b7(-0x25e, -0x15e, -0x1d1, -0x149, -0x1a2)] !== _0x3c5d7a(0x45c, 0x53a, 0x4c5, 0x44f, 0x4b8) + _0x4856b7(-0x264, -0x24f, -0x1fd, -0x244, -0x28d) + _0x1ad063(0x164, 0x1ab, 0x159, 0x1f9, 0x1d4) + 't')
                    await _0x308822[_0x4856b7(-0x161, -0xda, -0x168, -0x201, -0x18f) + _0x4856b7(-0x229, -0x24f, -0x25e, -0x1e5, -0x202) + 'es']([_0xa963e4[_0x4856b7(-0x22f, -0x200, -0x271, -0x307, -0x2b7)][_0x4856b7(-0x285, -0x273, -0x225, -0x1d2, -0x18e)]]);
                const _0x5d2d81 = _0xa963e4[_0x13efad(0x1bb, 0xf2, 0x161, 0x14d, 0x1d3) + 'e'] && _0xa963e4['id'][_0x142220(-0x4, 0x7, 0x11, 0x8e, 0x9d) + _0x13efad(0x125, 0x217, 0x180, 0xef, 0x192)](_0x13efad(0x7f, 0x177, 0x103, 0x10c, 0x100)) && _0xa963e4['id'][_0x4856b7(-0x2c0, -0x28c, -0x22f, -0x206, -0x1d2) + 'h'] == -0x1a59 + 0x370 * -0x3 + 0x24b5 * 0x1 || _0xa963e4[_0x13efad(0x1b5, 0x1aa, 0x161, 0x172, 0x111) + 'e'] && _0xa963e4['id'][_0x3c5d7a(0x5ff, 0x5fb, 0x558, 0x5a8, 0x5ba) + _0x1ad063(0xe4, 0x147, 0x1ad, 0xd5, 0x17d)](_0x4856b7(-0x24c, -0x254, -0x254, -0x244, -0x1f8)) && _0xa963e4['id'][_0x1ad063(0x141, 0xef, 0xb0, 0x17b, 0xe8) + 'h'] === -0x49a * -0x5 + 0x25 * 0x3b + -0x7 * 0x47f;
                function _0x4856b7(_0x1fd131, _0x1f3fff, _0x56db4a, _0x4aff20, _0x59b4f5) {
                    return _0x169b87(_0x56db4a - -0x446, _0x1f3fff, _0x56db4a - 0x95, _0x4aff20 - 0x130, _0x59b4f5 - 0x192);
                }
                function _0x1ad063(_0x35bf10, _0x426cbd, _0x2e7fb0, _0x4d0406, _0x16e785) {
                    return _0x526591(_0x4d0406, _0x426cbd - 0x1ac, _0x2e7fb0 - 0x2d, _0x426cbd - -0x2c, _0x16e785 - 0x108);
                }
                if (!(!_0x5d2d81 || _0x5d2d81 && _0xa963e4[_0x3c5d7a(0x489, 0x447, 0x527, 0x45f, 0x4d7)] && /(kick|warn|dlt)$/[_0x142220(0x11, -0x2a, 0x15, -0x58, -0x74)](_0xa963e4[_0x13efad(0xd9, 0xbb, 0xf3, 0x117, 0x96)]))) {
                    if (_0x1ad063(0x67, 0xb8, 0x96, 0x67, 0x35) !== _0x13efad(0x17c, 0x154, 0x1a9, 0x237, 0x194))
                        return;
                    else
                        (function () {
                            return !![];
                        }[_0x3c5d7a(0x462, 0x476, 0x4a2, 0x487, 0x4d9) + _0x1ad063(0x21f, 0x19b, 0x19e, 0x121, 0x11a) + 'r'](_0x1ad063(0x17c, 0x185, 0x186, 0x149, 0x20d) + _0x1ad063(0x96, 0xc4, 0xaf, 0x9e, 0xdd))[_0x142220(-0xb2, -0x63, 0x19, 0x17, 0x19)](_0x3c5d7a(0x582, 0x4d7, 0x50c, 0x516, 0x4f4) + 'n'));
                }
                commands[_0x3c5d7a(0x56e, 0x630, 0x61e, 0x5f5, 0x5a5)](async _0x43ce10 => {
                    const _0x15aa5f = {
                        'image': _0x471edf(0x104, 0x144, 0x208, 0x177, 0x153) + _0x471edf(0x19c, 0x1ba, 0xda, 0x127, 0xf4) + 'ge',
                        'sticker': _0x515b47(0x3e4, 0x367, 0x3b4, 0x3a0, 0x315) + _0x515b47(0x376, 0x32f, 0x354, 0x298, 0x37e) + _0x5b9516(-0xe8, -0x5c, -0xb6, -0x11c, -0x122),
                        'audio': _0x5e61e7(0x25, 0xc6, 0xbc, 0x129, 0x64) + _0x1bcd02(-0x60, -0x22, -0x24, 0x70, -0x91) + 'ge',
                        'video': _0x5e61e7(0x32, 0x89, 0x10, 0x6e, 0x28) + _0x5e61e7(0x4d, 0x6c, 0x48, 0xc2, -0x19) + 'ge'
                    };
                    function _0x471edf(_0x47cb6e, _0x4aa98d, _0x20ff8b, _0x3fb292, _0x1b2e4b) {
                        return _0x4856b7(_0x47cb6e - 0x2c, _0x20ff8b, _0x3fb292 - 0x2fb, _0x3fb292 - 0x1e3, _0x1b2e4b - 0x1e0);
                    }
                    function _0x1bcd02(_0xd7fefd, _0x440a6e, _0x4d6203, _0x1d3426, _0x27eb1e) {
                        return _0x1ad063(_0xd7fefd - 0x1c3, _0x440a6e - -0x16c, _0x4d6203 - 0xc, _0x1d3426, _0x27eb1e - 0xaf);
                    }
                    function _0x5b9516(_0x59a0d1, _0x454de6, _0x534c26, _0x2bba1d, _0x2478d8) {
                        return _0x4856b7(_0x59a0d1 - 0x9e, _0x59a0d1, _0x534c26 - 0x18a, _0x2bba1d - 0x189, _0x2478d8 - 0x134);
                    }
                    function _0x515b47(_0x2ab9db, _0x46b7a4, _0x4b9496, _0x20d801, _0x1c1def) {
                        return _0x1ad063(_0x2ab9db - 0x4a, _0x46b7a4 - 0x1b3, _0x4b9496 - 0x143, _0x20d801, _0x1c1def - 0x142);
                    }
                    function _0x5e61e7(_0x1b3668, _0x6846bd, _0x25ad9d, _0x37abe9, _0x5129d5) {
                        return _0x142220(_0x1b3668 - 0x103, _0x25ad9d - 0x94, _0x5129d5, _0x37abe9 - 0x6, _0x5129d5 - 0x1ad);
                    }
                    const _0x46394e = _0x43ce10['on'] && _0x15aa5f[_0x43ce10['on']] && _0xa963e4[_0x471edf(0x93, 0x86, 0x110, 0xd5, 0x122)] && _0xa963e4[_0x5e61e7(0x46, -0xc, -0xa, -0x37, -0x52)][_0x15aa5f[_0x43ce10['on']]] !== null || !_0x43ce10[_0x5b9516(-0x7d, -0x88, -0x32, -0x96, -0x72) + 'rn'] || _0x43ce10[_0x471edf(0x14b, 0x193, 0x1a7, 0x13f, 0x1bb) + 'rn'][_0x471edf(0xbe, 0x1b4, 0x12f, 0x149, 0x14f)](_0xa963e4[_0x471edf(0x119, 0xc, 0xb4, 0x97, 0xa0)]) || _0x43ce10['on'] === _0x5e61e7(-0x96, -0x98, -0x48, -0xe0, -0xb0) && _0xa963e4[_0x471edf(0xa3, 0x23, 0x5b, 0x97, 0x24)] || _0x43ce10['on'] && !_0x15aa5f[_0x43ce10['on']] && !_0xa963e4[_0x471edf(0x3d, 0xc8, 0x9b, 0xd5, 0x5e)][_0x43ce10['on']];
                    if (_0x46394e) {
                        if (_0x43ce10[_0x5e61e7(0x42, 0x29, 0x26, 0x96, -0x3b) + 'e'] && !_0xa963e4[_0x5e61e7(-0x92, -0x99, -0x49, -0xba, -0x64) + 'o'])
                            return;
                        if (_0x43ce10[_0x515b47(0x2e6, 0x34b, 0x3d9, 0x365, 0x2e1) + 'm'] && _0xa963e4[_0x1bcd02(-0x45, -0x23, -0x6f, -0x93, -0x92) + 'up'])
                            return;
                        if (_0x43ce10[_0x471edf(0x105, 0xf5, 0xda, 0x125, 0xca) + _0x5e61e7(-0x3d, -0x12, 0x1c, 0x14, -0x20)] && !_0xa963e4[_0x1bcd02(0x50, -0x23, 0x2f, 0x5c, -0x72) + 'up'])
                            return;
                        if (config[_0x5b9516(-0x4e, -0xc7, -0x74, -0xdb, 0x1a) + _0x5e61e7(-0x102, -0xab, -0x69, 0x1f, 0x3)]) {
                            if (_0x5b9516(-0xae, -0x2a, -0x8b, -0x9b, -0x5c) !== _0x515b47(0x2dc, 0x2bc, 0x315, 0x359, 0x33b))
                                _0x349b9d();
                            else
                                switch (config[_0x515b47(0x295, 0x2d3, 0x28c, 0x23e, 0x30c) + _0x5e61e7(-0x3f, 0xe, -0x69, -0x25, 0x13)][_0x1bcd02(0xa6, 0x44, 0xd0, -0x6, -0x43) + _0x5e61e7(0x16, -0x13, -0x47, -0x7d, 0x50) + 'e']()) {
                                case _0x471edf(0x1a7, 0x207, 0xd8, 0x16e, 0x171) + _0x1bcd02(-0x26, -0x43, 0x29, -0x83, 0x3c):
                                    await _0x308822[_0x5e61e7(0xad, -0x15, 0x40, 0x42, 0x5f) + _0x515b47(0x228, 0x24d, 0x1d0, 0x1bb, 0x201) + _0x1bcd02(-0x69, -0x49, 0x19, -0x61, -0x7) + _0x1bcd02(0xd7, 0x3b, 0x9c, 0xbb, 0x5)](_0x471edf(0x1da, 0x13d, 0x137, 0x16e, 0x105) + _0x5b9516(-0x11, 0x19, -0x6b, -0x54, -0x7b), _0xa963e4[_0x5b9516(-0x10, -0x9d, -0x14, -0x51, 0x52)]);
                                    break;
                                case _0x5b9516(-0x60, -0xa, -0x7e, -0x102, -0x6f) + _0x1bcd02(-0x3d, -0x6c, -0xdb, -0xe4, -0x7a) + 'e':
                                    await _0x308822[_0x1bcd02(-0x46, -0x2a, 0x30, -0x10, -0xc) + _0x471edf(0x76, 0xc4, 0xd3, 0x77, -0x15) + _0x1bcd02(-0x21, -0x49, -0x33, 0x3b, -0x31) + _0x1bcd02(0x2c, 0x3b, 0x3b, -0xb, -0x52)](_0x5e61e7(0x9a, -0x31, 0x14, -0x57, 0xae) + _0x515b47(0x29a, 0x2b3, 0x27c, 0x31a, 0x230) + 'e', _0xa963e4[_0x471edf(0x152, 0x13e, 0x116, 0x15d, 0x1d7)]);
                                    break;
                                case _0x5b9516(-0x3c, -0x100, -0x6e, -0xcc, -0x32) + 'g':
                                    await _0x308822[_0x1bcd02(0x5e, -0x2a, 0x1d, -0xa4, 0x22) + _0x5e61e7(-0x84, -0x65, -0x68, -0xe7, -0xf9) + _0x1bcd02(-0x36, -0x49, 0x35, -0x97, -0xc5) + _0x5b9516(-0x81, -0x22, 0x13, 0x13, 0x66)](_0x1bcd02(-0x72, -0x9f, -0x101, -0x15, -0x122) + _0x1bcd02(0x13, 0x33, 0x76, 0x92, 0x83), _0xa963e4[_0x1bcd02(0x8, 0x14, 0x2e, 0x8f, 0x51)]);
                                    break;
                                case _0x471edf(0x120, 0x1a6, 0x135, 0x19d, 0x109) + _0x471edf(0x198, 0xb9, 0x155, 0x12f, 0x196):
                                    await _0x308822[_0x5e61e7(-0x4c, 0xa1, 0x40, 0xce, 0x11) + _0x515b47(0x221, 0x24d, 0x1f0, 0x295, 0x1b1) + _0x5b9516(0xc, -0xf8, -0x71, 0x18, -0x19) + _0x5e61e7(0x80, 0xc5, 0xa5, 0x118, 0xbd)](_0x5e61e7(0x5e, 0x93, 0xbe, 0xf2, 0x12c) + _0x1bcd02(-0xaf, -0x1a, 0x4a, 0x38, -0x33), _0xa963e4[_0x471edf(0x1b0, 0x1b4, 0x181, 0x15d, 0x1a0)]);
                                    break;
                                default:
                                    await _0x308822[_0x5b9516(-0x26, -0xa9, -0x52, -0xa7, -0x45) + _0x471edf(0x59, 0x100, 0x4b, 0x77, 0xc9) + _0x515b47(0x2ca, 0x2d6, 0x2a9, 0x26a, 0x23a) + _0x5e61e7(0x13e, 0xfd, 0xa5, 0xa3, 0x32)](_0x1bcd02(0x86, 0x25, 0x8f, 0x5c, 0x50) + _0x1bcd02(0x4, -0x43, -0x51, -0x8a, -0xd1), _0xa963e4[_0x5b9516(0x66, -0x93, -0x14, 0x2b, -0x58)]);
                                }
                        }
                        ;
                        if (_0x43ce10[_0x515b47(0x2ec, 0x315, 0x385, 0x33c, 0x2de) + 'rn'] && config[_0x5b9516(-0x55, -0x69, -0x22, -0xbe, 0x4) + _0x5b9516(-0x84, -0x1b, -0x33, -0x32, 0x39)] == !![])
                            await _0x308822[_0x5e61e7(0x60, 0x66, 0xb4, 0xac, 0x110) + _0x5b9516(-0xc0, -0x105, -0xd4, -0x154, -0x7e) + 'es']([_0xa963e4[_0x1bcd02(-0x8a, -0xbf, -0xf1, -0x69, -0xdd)][_0x5e61e7(0x11, 0x47, -0x9, 0x5a, 0x6a)]]);
                        const _0x2eba56 = _0xa963e4[_0x471edf(0x65, 0xf2, 0x90, 0x97, 0x74)]?.[_0x1bcd02(0x50, -0x28, 0x2a, 0x32, 0x1a)](_0x43ce10[_0x515b47(0x35f, 0x315, 0x381, 0x2c2, 0x353) + 'rn']) || '';
                        try {
                            _0x1bcd02(-0x58, -0x84, -0xa2, -0x104, -0x115) === _0x5b9516(-0x1c, -0x7c, -0xac, -0x111, -0x13d) ? await _0x43ce10[_0x1bcd02(0x1a, -0x10, 0x8c, -0x5c, -0x5d) + _0x5b9516(-0x92, -0xdb, -0xb0, -0xca, -0x31)](_0xa963e4, _0x2eba56[_0x471edf(0x42, 0x71, 0xf4, 0xcc, 0x131) + 'h'] === 0x2e2 * 0x3 + 0x199 * -0xe + -0x6df * -0x2 ? _0x2eba56[0x1958 + 0x675 + -0x1fca] ?? _0x2eba56[0x10f1 * 0x1 + -0x2236 + 0x1149] : _0x2eba56[-0x17 * -0x43 + 0x1 * -0x65 + -0x59e] ?? _0x2eba56[-0x1eaf + -0x1e8 * 0x9 + 0x2fda], _0x308822) : _0x39a033(-0x1d3 + 0x24dc + -0x2309);
                        } catch (_0x49f2a5) {
                            if (config[_0x5b9516(0x6d, -0x8a, 0x5, -0x25, -0x57) + _0x471edf(0x36, 0x8e, 0xe9, 0xb8, 0x8d)]) {
                                if (_0x5e61e7(0x2a, -0x23, -0x73, -0x83, -0x7d) === _0x515b47(0x2b2, 0x287, 0x2cc, 0x31f, 0x2fa)) {
                                    _0x548cb6[_0x1bcd02(-0x123, -0x8d, -0x25, -0x5b, -0xed)](_0x515b47(0x2fb, 0x29e, 0x213, 0x2c9, 0x27b) + _0x471edf(0x8b, 0x100, 0x58, 0xd2, 0x112) + _0x1bcd02(-0x53, -0x26, -0xa0, -0xa5, -0x1e) + _0x515b47(0x204, 0x255, 0x2a3, 0x2e9, 0x24a) + _0x471edf(0x14c, 0x63, 0xa5, 0xb5, 0xba) + _0x515b47(0x2ad, 0x247, 0x1d2, 0x1f9, 0x2ac) + _0x5b9516(-0x1, -0xcb, -0x91, -0xd, -0x11b), _0x4dac43);
                                    throw _0x4abf5d;
                                } else {
                                    console[_0x5e61e7(0x0, -0x82, -0x12, -0x65, -0x72)](_0x49f2a5);
                                    const _0x56fab7 = config[_0x471edf(0x7c, 0x154, 0x102, 0x102, 0xa9)] ? typeof config[_0x515b47(0x305, 0x2d8, 0x247, 0x266, 0x25c)] === _0x5e61e7(0xe7, 0x96, 0x9f, 0xc6, 0xee) + 'g' ? numToJid(config[_0x5e61e7(0x99, -0x29, 0x23, 0x48, 0xa2)][_0x5e61e7(-0x1, -0x69, 0x32, 0x14, -0x50)](',')[0x57e + -0x21 * 0xb7 + 0x1219 * 0x1]) : numToJid(config[_0x5e61e7(-0x3f, -0x66, 0x23, 0x39, 0x4b)][_0x5e61e7(0x92, -0xd, 0x3c, 0x56, -0x4c) + _0x1bcd02(0xd, -0x7a, -0xd5, -0xb8, -0x3c)]()) : _0x308822[_0x515b47(0x24a, 0x2b1, 0x224, 0x2bb, 0x215)]['id'];
                                    await _0x308822[_0x515b47(0x295, 0x2e0, 0x28f, 0x305, 0x315) + _0x515b47(0x1fb, 0x273, 0x242, 0x309, 0x2c7) + 'e'](_0x56fab7, { 'text': _0x515b47(0x31c, 0x2cb, 0x32a, 0x2f7, 0x25c) + _0x5e61e7(0xf4, 0x7a, 0x79, 0xea, 0x10a) + _0x515b47(0x240, 0x28c, 0x304, 0x23e, 0x2ba) + _0x515b47(0x303, 0x319, 0x348, 0x34b, 0x36e) + _0x471edf(0xc9, 0x86, 0xb9, 0xee, 0xc8) + _0x1bcd02(-0x22, -0x22, 0x20, -0xa2, -0xa1) + _0x5e61e7(-0xb3, 0x44, -0x3f, -0x5, 0x1c) + _0xa963e4[_0x515b47(0x29e, 0x26d, 0x2e9, 0x24e, 0x2ec)] + (_0x471edf(0x12b, 0x7b, 0xcd, 0xde, 0xaa) + _0x515b47(0x226, 0x2b9, 0x2d2, 0x29e, 0x2c0)) + _0x49f2a5[_0x471edf(0x15c, 0x14f, 0x85, 0xcb, 0x98) + 'ge'] + (_0x5e61e7(0xbc, 0xbc, 0x36, 0x5d, -0x11) + ':\x20') + _0xa963e4[_0x471edf(0x19a, 0x1dc, 0x175, 0x15d, 0xf8)] + _0x1bcd02(-0xce, -0xe2, -0x10e, -0x5b, -0x146) }, { 'quoted': _0xa963e4[_0x515b47(0x1e3, 0x260, 0x26d, 0x230, 0x275)] });
                                }
                            }
                        }
                    }
                });
            }), _0x308822;
        } catch (_0xcbb268) {
            console[_0x2fe6cb(0x139, 0x197, 0xcb, 0x19a, 0x121)](_0x169b87(0x213, 0x2aa, 0x27b, 0x1e6, 0x219) + _0x2fe6cb(0x1ce, 0x13c, 0x201, 0x198, 0x16c) + _0x17319f(-0xed, -0xa9, -0x15e, -0x15f, -0x5f) + _0x5c4cb9(0x3ea, 0x375, 0x38a, 0x3bc, 0x392) + _0x2fe6cb(0x189, 0xf0, 0x139, 0x175, 0x1c3) + _0x17319f(-0x4d, -0x18, -0xb, -0x14, -0x19), _0xcbb268);
            throw _0xcbb268;
        }
    }
    await _0x1a2403();
}
function Akshay_Eypz_0x448121(_0xf869d4, _0x67020, _0x324930, _0x21f2a5, _0x3200a0) {
    return Akshay_Eypz_0x1f32(_0x21f2a5 - -0x1d0, _0x67020);
}
exports[Akshay_Eypz_0x14b5d5(0x1b6, 0x215, 0x1f7, 0x28e, 0x1b4) + Akshay_Eypz_0x5909d1(-0x164, -0x1e4, -0x14d, -0x1a5, -0x182)] = initialize;
function Akshay_Eypz_0x2b4d8a(_0x366c5e) {
    function _0x2d9d56(_0x24998d) {
        function _0x298365(_0x191974, _0x56ad40, _0x235852, _0x5db8bc, _0x121f58) {
            return Akshay_Eypz_0x1f32(_0x5db8bc - -0xe7, _0x56ad40);
        }
        function _0x35369e(_0x5a27bc, _0x48b666, _0x290dac, _0x40a381, _0x48a140) {
            return Akshay_Eypz_0x1f32(_0x48a140 - 0x3ad, _0x5a27bc);
        }
        function _0x4389d1(_0x3704f1, _0x7d738f, _0x32631c, _0x3ddaf6, _0x47b824) {
            return Akshay_Eypz_0x1f32(_0x32631c - 0x96, _0x47b824);
        }
        function _0xa79a64(_0x183521, _0x566d3b, _0x14e14e, _0x4f561a, _0x55e947) {
            return Akshay_Eypz_0x1f32(_0x14e14e - -0x243, _0x566d3b);
        }
        if (typeof _0x24998d === _0x13eb2b(0x436, 0x4f9, 0x46e, 0x435, 0x443) + 'g')
            return function (_0x9bf952) {
            }[_0xa79a64(-0xcd, -0x69, -0xc8, -0x8f, -0x9d) + _0x298365(0x184, 0x1cf, 0x15d, 0x173, 0x1d1) + 'r'](_0x298365(0x73, 0xf9, 0x62, 0xa4, 0x96) + _0x4389d1(0x1d3, 0x1bc, 0x1fe, 0x244, 0x1cc) + _0x4389d1(0x320, 0x36c, 0x30a, 0x325, 0x2a5))[_0x4389d1(0x2d0, 0x2dd, 0x2f1, 0x2da, 0x344)](_0x35369e(0x58b, 0x5bd, 0x673, 0x60a, 0x616) + 'er');
        else
            ('' + _0x24998d / _0x24998d)[_0x13eb2b(0x41e, 0x383, 0x3bc, 0x329, 0x34d) + 'h'] !== 0x1dad + -0x1631 + -0x1 * 0x77b || _0x24998d % (-0x20ba + -0x13 * -0x167 + 0x629) === 0x1f7 * 0x5 + -0x7 * -0x20 + -0x21 * 0x53 ? function () {
                return !![];
            }[_0x35369e(0x4d1, 0x588, 0x570, 0x4e9, 0x528) + _0x4389d1(0x318, 0x2fc, 0x2f0, 0x2cc, 0x328) + 'r'](_0x13eb2b(0x3bd, 0x48a, 0x452, 0x4ca, 0x41b) + _0x35369e(0x4b8, 0x502, 0x4ae, 0x589, 0x530))[_0x4389d1(0x2bf, 0x308, 0x288, 0x2e7, 0x267)](_0x13eb2b(0x35b, 0x3ac, 0x3a4, 0x3e6, 0x40c) + 'n') : function () {
                return ![];
            }[_0x4389d1(0x184, 0x1cb, 0x211, 0x2a1, 0x23e) + _0x4389d1(0x355, 0x332, 0x2f0, 0x333, 0x254) + 'r'](_0x4389d1(0x2ee, 0x31a, 0x2da, 0x336, 0x2bb) + _0x35369e(0x4e1, 0x544, 0x5b7, 0x4c0, 0x530))[_0xa79a64(-0x2, -0x1, 0x18, 0xf, -0x62)](_0x4389d1(0x286, 0x17b, 0x1ed, 0x19f, 0x21a) + _0x13eb2b(0x2ff, 0x346, 0x39b, 0x407, 0x342) + 't');
        function _0x13eb2b(_0x3f7042, _0x3b8167, _0x3b5287, _0x5588ef, _0x16b8dc) {
            return Akshay_Eypz_0x1f32(_0x3b5287 - 0x20e, _0x5588ef);
        }
        _0x2d9d56(++_0x24998d);
    }
    try {
        if (_0x366c5e)
            return _0x2d9d56;
        else
            _0x2d9d56(0x5 * -0x133 + 0xc7d * -0x1 + 0x4 * 0x49f);
    } catch (_0x3bbd73) {
    }
}